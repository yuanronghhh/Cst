set(search_dirs
  ${LIBDIR}
  /usr/local
  /usr
  /usr/lib/x86_64-linux-gnu
)

set(PANGO_FILES "")

FIND_PATH(PANGO_INCLUDE_DIR
  NAMES pango/pango.h
  HINTS ${search_dirs}
  PATH_SUFFIXES include/pango-1.0 pango2/include pango/include/pango-1.0
)

log("${PANGO_INCLUDE_DIR}")

set(PANGO_COMPONENTS
  "pango"
  "pangocairo"
  "pangoft2")

if(WIN32)
  LIST(APPEND PANGO_COMPONENTS "pangowin32")
endif()

FOREACH(COMPONENT ${PANGO_COMPONENTS})
  STRING(TOUPPER ${COMPONENT} UPPERCOMPONENT)

  FIND_LIBRARY(PANGO_${UPPERCOMPONENT}_LIBRARY
    NAMES "${COMPONENT}-1.0"
    HINTS ${search_dirs}
    PATH_SUFFIXES lib64 lib pango/lib)

  if(WIN32)
    FIND_FILE(PANGO_${UPPERCOMPONENT}_FILE
      NAMES "${COMPONENT}-1.0-0.dll"
      HINTS ${search_dirs}
      PATH_SUFFIXES pango/bin)
  endif()

  LIST(APPEND PANGO_FILES "${PANGO_${UPPERCOMPONENT}_FILE}")
  LIST(APPEND PANGO_LIBRARY "${PANGO_${UPPERCOMPONENT}_LIBRARY}")
ENDFOREACH()

LIST(APPEND PANGO_INCLUDE_DIR "${FRIBIDI_INCLUDE_DIR}/fribidi")
LIST(APPEND PANGO_FILES "${HARFBUZZ_FILES}")
LIST(APPEND PANGO_FILES "${FRIBIDI_FILES}")

INCLUDE(FindPackageHandleStandardArgs)
FIND_PACKAGE_HANDLE_STANDARD_ARGS(PANGO DEFAULT_MSG
  PANGO_LIBRARY PANGO_INCLUDE_DIR)

IF(PANGO_FOUND)
  SET(PANGO_LIBRARIES ${PANGO_LIBRARY})
  SET(PANGO_INCLUDE_DIRS ${PANGO_INCLUDE_DIR})
  SET(PANGO_FILES ${PANGO_FILES})
ENDIF(PANGO_FOUND)

MARK_AS_ADVANCED(
  PANGO_INCLUDE_DIR
  PANGO_LIBRARY
  PANGO_FILES
)
